<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Load Test Web Service CreateQuestion" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Data to create question" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">HundredQuestionData.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">true</boolProp>
        <stringProp name="variableNames">id</stringProp>
      </CSVDataSet>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="testHome" elementType="Argument">
            <stringProp name="Argument.name">testHome</stringProp>
            <stringProp name="Argument.value">${__BeanShell(import org.apache.jmeter.services.FileServer fileserver.getFileServer().getBaseDir();)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="demoCourseId" elementType="Argument">
            <stringProp name="Argument.name">demoCourseId</stringProp>
            <stringProp name="Argument.value">2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">database</stringProp>
        <stringProp name="dbUrl">jdbc:postgresql://localhost:5432/tutordb?autoReconnect=true</stringProp>
        <stringProp name="driver">org.postgresql.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">diogo</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">diogo</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Database" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert submitted questions" enabled="true">
          <stringProp name="dataSource">database</stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="query">INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2000,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2000,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2001,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2001,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2002,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2002,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2003,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2003,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2004,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2004,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2005,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2005,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2006,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2006,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2007,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2007,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2008,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2008,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2009,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2009,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2010,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2010,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2011,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2011,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2012,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2012,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2013,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2013,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2014,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2014,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2015,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2015,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2016,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2016,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2017,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2017,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2018,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2018,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2019,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2019,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2020,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2020,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2021,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2021,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2022,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2022,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2023,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2023,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2024,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2024,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2025,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2025,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2026,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2026,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2027,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2027,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2028,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2028,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2029,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2029,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2030,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2030,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2031,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2031,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2032,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2032,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2033,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2033,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2034,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2034,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2035,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2035,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2036,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2036,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2037,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2037,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2038,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2038,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2039,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2039,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2040,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2040,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2041,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2041,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2042,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2042,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2043,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2043,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2044,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2044,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2045,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2045,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2046,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2046,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2047,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2047,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2048,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2048,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2049,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2049,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2050,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2050,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2051,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2051,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2052,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2052,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2053,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2053,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2054,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2054,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2055,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2055,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2056,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2056,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2057,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2057,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2058,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2058,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2059,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2059,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2060,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2060,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2061,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2061,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2062,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2062,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2063,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2063,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2064,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2064,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2065,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2065,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2066,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2066,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2067,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2067,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2068,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2068,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2069,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2069,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2070,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2070,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2071,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2071,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2072,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2072,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2073,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2073,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2074,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2074,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2075,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2075,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2076,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2076,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2077,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2077,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2078,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2078,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2079,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2079,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2080,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2080,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2081,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2081,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2082,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2082,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2083,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2083,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2084,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2084,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2085,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2085,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2086,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2086,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2087,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2087,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2088,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2088,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2089,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2089,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2090,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2090,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2091,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2091,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2092,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2092,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2093,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2093,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2094,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2094,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2095,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2095,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2096,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2096,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2097,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2097,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2098,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2098,&apos;Demo_Student&apos;);
INSERT INTO questions(id,content,title,status,course_id,key,username) VALUES(2099,&apos;Question_Content&apos;,&apos;Question_Title&apos;,&apos;DISABLED&apos;,2,2099,&apos;Demo_Student&apos;);</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="100 Users" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login as Demo Teacher" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/auth/demo/teacher</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Authenticated Requests" enabled="true"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">10</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request to Review a Question" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">AVAILABLE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name"></stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${server}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/questions/${id}/set-status</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </PostThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
          <stringProp name="dataSource">database</stringProp>
          <stringProp name="query">DELETE FROM questions WHERE username = &apos;Demo_Student&apos;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
